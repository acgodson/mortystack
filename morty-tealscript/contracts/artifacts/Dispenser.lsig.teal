#pragma version 9
//#pragma mode logicsig

// This TEAL was generated by TEALScript v0.62.1
// https://github.com/algorandfoundation/TEALScript

// The address of this logic signature is 7MQ3HVIOPRV4ILUXOFD2KYDQC3FWNKF6AYLVIV2PKEQPDKSJTDMFM5JX3A

b route_logic

// logic(bytes)void
route_logic:
	byte 0x; dupn 2 // push empty bytes to fill the stack frame for this subroutine's local variables

	// SECRET: byte[]
	int 1
	args
	extract 2 0

	// execute logic(bytes)void
	callsub logic
	int 1
	return

logic:
	proto 4 0

	// contracts/dispenser.algo.ts:9
	// END_TIMESTAMP = 1667721600
	int 1667721600
	frame_bury -2 // END_TIMESTAMP: uint64

	// contracts/dispenser.algo.ts:10
	// HASHED_SECRET =
	//       "65462b0520ef7d3df61b9992ed3bea0c56ead753be7c8b3614e0ce01e4cac41b"
	byte 0x36353436326230353230656637643364663631623939393265643362656130633536656164373533626537633862333631346530636530316534636163343162 // "65462b0520ef7d3df61b9992ed3bea0c56ead753be7c8b3614e0ce01e4cac41b"
	frame_bury -3 // HASHED_SECRET: bytes

	// contracts/dispenser.algo.ts:12
	// hash: byte32 = keccak256(SECRET)
	frame_dig -1 // SECRET: bytes
	keccak256
	frame_bury -4 // hash: byte32

	// contracts/dispenser.algo.ts:13
	// assert(globals.latestTimestamp < END_TIMESTAMP)
	global LatestTimestamp
	int 1667721600 // END_TIMESTAMP: uint64
	<
	assert

	// contracts/dispenser.algo.ts:14
	// assert(hash === HASHED_SECRET)
	frame_dig -4 // hash: byte32
	byte 0x36353436326230353230656637643364663631623939393265643362656130633536656164373533626537633862333631346530636530316534636163343162 // "65462b0520ef7d3df61b9992ed3bea0c56ead753be7c8b3614e0ce01e4cac41b" // HASHED_SECRET: bytes
	==
	assert
	retsub